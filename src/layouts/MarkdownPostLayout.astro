---
import DateTimeComponent from "../components/DateTimeComponent.astro";
import BaseLayout from "./BaseLayout.astro";
import { Disqus } from "astro-disqus";

interface Props {
  frontmatter: {
    title: string;
    date: string;
    description?: undefined | string;
    tags: string[];
    imageAlt?: string | undefined;
    image?: {
      src: string;
      width: number;
      height: number;
    } | undefined;
  };
}
const { frontmatter } = Astro.props;

const description = frontmatter.description;
const image = frontmatter.image;
---

<BaseLayout pageTitle={frontmatter.title}>
  <slot name="head" slot="head" />
  {description && (
    <meta name="description" content={description} slot="head" />
  )}
  {description && (
    <meta name="og:description" content={description} slot="head" />
  )}

  <meta name="og:title" content={frontmatter.title} slot="head" />
  <meta name="og:type" content="article" slot="head" />
  <meta name="og:url" content={new URL(Astro.url.pathname.replace(".html", ""), Astro.site)} slot="head" />
  {image && (
    <meta name="og:image" content={image.src} slot="head" />
  )}
  {image && (
    <meta name="og:image:width" content={image.width.toString()} slot="head" />
  )}
  {image && (
    <meta name="og:image:height" content={image.height.toString()} slot="head" />
  )}
  
  <h1>{frontmatter.title}</h1>

  <p><DateTimeComponent date={frontmatter.date} /></p>

  <p><em>{frontmatter.description}</em></p>

  <div class="tags">
    {
      frontmatter.tags.map((tag: string) => (
        <p class="tag">
          <a href={`/tags/${tag}`}>{tag}</a>
        </p>
      ))
    }
  </div>

  <slot />

  <Disqus
    embed="https://davidgardiner.disqus.com/embed.js"
    url={Astro.url.toString()}
  />
</BaseLayout>
