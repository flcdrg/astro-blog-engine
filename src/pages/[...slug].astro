---
import { getCollection, render } from "astro:content";
import { DateTime } from "luxon";
import MarkdownPostLayout from "../layouts/MarkdownPostLayout.astro";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog");

  return posts.map((post) => {

    //const date = DateTime.fromISO(post.data.date);
    
    //console.log(post);

    // id has the format '2024/2024-12-15-sonarcloud'.
    // Remove the year and date prefix.
    //const id = post.id.substring(16)

    //const slug = `${date.toFormat("yyyy")}/${date.toFormat("MM")}/${id}`;
    return ({
      params: {
        slug: post.id
      },
      props: {
        post: post,
        year: DateTime.fromISO(post.data.date).toFormat("yyyy"),
      },
    });
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post } = Astro.props as Props;
const { } = Astro.params as Params;

if (!post) {
  throw new Error("Post not found");
}

const { Content } = await render(post);
---

{
  post && (
    <MarkdownPostLayout frontmatter={post.data}>
      <Content />
    </MarkdownPostLayout>
  )
}
