---
import { getCollection, render } from 'astro:content';
import MarkdownPostLayout from '../layouts/MarkdownPostLayout.astro';
import getPostsByGroupCondition from "../scripts/getPostsByGroupCondition";
import { DateTime } from 'luxon';

export async function getStaticPaths() {
  const posts = await getCollection('blog');

  const years = Object.entries(
    getPostsByGroupCondition(posts, (post) => DateTime.fromISO(post.data.date).toJSDate().getFullYear())
  )
    .sort(([yearA], [yearB]) => Number(yearB) - Number(yearA))
    .map(([year, yearGroup]) => ({
      params: { slug: year },
      props: { posts: yearGroup },
    }));

  const individualPosts = posts.map(post => ({
    params: { slug: post.id }, props: { post },
  }));

  console.log(years);
  console.log(individualPosts);

  return [...years, ...individualPosts];
}

interface Props {
  post?: any;
}
const { post } = Astro.props;

if (!post) {
  throw new Error('Post not found');
}

const { Content } = await render(post);
---
{post &&
<MarkdownPostLayout frontmatter={post.data}>
  <Content />
</MarkdownPostLayout>
}