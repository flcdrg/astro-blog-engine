---
import { getCollection } from "astro:content";
import getPostsByGroupCondition from "../../scripts/getPostsByGroupCondition";
import { DateTime } from "luxon";
import BaseLayout from "../../layouts/BaseLayout.astro";

import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";
import onlyCurrent from "../../scripts/filters";
import DateTimeComponent from "../../components/DateTimeComponent.astro";

export const getStaticPaths = (async () => {
  const posts = (await getCollection("blog")).filter(onlyCurrent);

  const years = Object.entries(
    getPostsByGroupCondition(posts, (post) =>
      DateTime.fromISO(post.data.date).toJSDate().getFullYear()
    )
  )
    .sort(([yearA], [yearB]) => Number(yearB) - Number(yearA))
    .map(([year, yearGroup]) => ({
      params: { year },
      props: {
        posts: yearGroup.sort(
          (a, b) =>
            DateTime.fromISO(a.data.date).toJSDate().getTime() -
            DateTime.fromISO(b.data.date).toJSDate().getTime()
        ),
      },
    }));

  return years;
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { year } = Astro.params as Params;
const { posts } = Astro.props as Props;
const pageTitle = `Posts from ${year}`;
const frontmatter = {
  description: `Summary list of posts from the year ${year}`,
};
---

<BaseLayout pageTitle={pageTitle} frontmatter={frontmatter}>
  <h1>{year}</h1>

  <ul class="list-none">
    {
      posts.map((post) => (
        <li>
          <DateTimeComponent
            date={post.data.date}
            class="text-gray-500"
            hideYear={true}
          />
          - <a href={`/${post.id}`}>{post.data.title}</a>
        </li>
      ))
    }
  </ul>
</BaseLayout>
