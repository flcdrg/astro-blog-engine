name: Submit all Wayback Links

# This workflow can be triggered manually
on:
  workflow_dispatch:

jobs:
  generate_report:
    runs-on: ubuntu-latest
    name: Submit all Wayback Machine links

    steps:
      - name: Download Latest Artifact
        uses: dawidd6/action-download-artifact@v9
        with:
          name: link-checker-results
          workflow: main.yml
          branch: main
          path: ./artifacts
          github_token: ${{ secrets.CREATE_PULLREQUEST_ACCESS_TOKEN }}
          check_artifacts: true
          search_artifacts: true
          if_no_artifact_found: fail

      - name: Filter JSON
        run: |
          $rawUrls = (get-content ./artifacts/output.json | ConvertFrom-Json).success_map.PSObject.properties.Value | Select-Object -ExpandProperty url | Sort-Object -Unique

          $rawUrls

          $urls = ($rawUrls | Where-Object { $_.StartsWith("http") -and -not $_.Contains("web.archive.org") } ) -join " "

          # Set GitHub Action variable to be used in the next step

          echo "SUCCESS_URLS=$urls" >> "$env:GITHUB_ENV"
        shell: pwsh

      - name: Check env variable
        run: |
          echo "SUCCESS_URLS=$SUCCESS_URLS"

      - name: Submit to Wayback Machine
        run: |
          # Submit all URLs to the Wayback Machine
          $urls = $env:SUCCESS_URLS -split " "
          $total = $urls.Count
          $i = 0
          foreach ($url in $urls) {
            $i++

            # Check if URL already exists in Wayback Machine
            $urlExists = Invoke-RestMethod "https://archive.org/wayback/available?url=$url" -Method Get
            if ($urlExists.archived_snapshots.psobject.properties.name -contains "closest" -and $urlExists.archived_snapshots.closest.available -eq $true) {
              Write-Host "URL already exists in Wayback Machine: $url"
              continue
            }

            Write-Host "Submitting $i/$total $url to Wayback Machine..."

            $encodedUrl = [System.Web.HttpUtility]::UrlEncode($url)
            $waybackUrl = "https://web.archive.org/save/$encodedUrl"
            $response = Invoke-WebRequest -Uri $waybackUrl -Method Get
          }
        shell: pwsh